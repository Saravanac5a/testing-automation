# -*- coding: utf-8 -*-
"""Testing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NNiq4rl7YrYkv8A3dfcUpzWi8fM7PdLh
"""

#@title Selenium Setup
!pip install selenium
!apt-get update # to update ubuntu to correctly run apt install
!apt install chromium-chromedriver
!cp /usr/lib/chromium-browser/chromedriver /usr/bin
import sys
import json
import os
from datetime import datetime
sys.path.insert(0,'/usr/lib/chromium-browser/chromedriver')
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.common.action_chains import ActionChains
chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument('--headless')
chrome_options.add_argument('window-size=1700,925')
chrome_options.add_argument('--no-sandbox')
chrome_options.add_argument('--disable-dev-shm-usage')
capabilities = DesiredCapabilities.CHROME
capabilities['goog:loggingPrefs'] = {'performance': 'ALL'}
driver = webdriver.Chrome('chromedriver',options=chrome_options,desired_capabilities=capabilities)

year = datetime.today().strftime('%Y')[2:]
date = datetime.today().strftime('%d-%m-')
date = date + year
os.mkdir('/content/'+date)

#@title Status Code
def get_status_code(url):
    for entry in driver.get_log('performance'):
        for k, v in entry.items():
            if k == 'message' and 'status' in v:
                msg = json.loads(v)['message']['params']
                for mk, mv in msg.items():
                    if mk == 'response':
                        response_url = mv['url']
                        response_status = mv['status']
                        if response_url == url:
                            return response_status

def ipo_status_code(driver):
  responses = []
  perfLog = driver.get_log('performance')
  for logIndex in range(0, len(perfLog)): # Parse the Chrome Performance logs
    logMessage = json.loads(perfLog[logIndex]["message"])["message"]
    if logMessage["method"] == "Network.responseReceived": # Filter out HTTP responses
      responses.append(logMessage["params"]["response"]) # append each response to self.responses
      if logMessage["params"]["response"]["url"] == driver.current_url: # create instance attributes containing the response call for self.url
        response   = logMessage["params"]["response"]
        return response["status"]

#@title Full Screenshot
def save_screenshot(driver, name, folder):
    # Ref: https://stackoverflow.com/a/52572919/
    year = datetime.today().strftime('%Y')[2:]
    date = datetime.today().strftime('%d-%m-')
    date = date + year
    original_size = driver.get_window_size()
    required_width = driver.execute_script('return document.body.parentNode.scrollWidth')
    required_height = driver.execute_script('return document.body.parentNode.scrollHeight')
    driver.set_window_size(required_width, required_height)
    driver.find_element(By.TAG_NAME,'body').screenshot('/content/'+date+'/'+folder+'/'+name+'.png')  # avoids scrollbar
    driver.set_window_size(original_size['width'], original_size['height'])

#@title Products NavBar
a = ActionChains(driver)
def products_test(name):
  driver.get("http://www.5paisa.com/")
  link_text = driver.find_element(By.XPATH,'/html/body/div/div/header/div[2]/div/div[5]/ul/li[1]/a')
  a.move_to_element(link_text).perform()
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name))).click()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'Products Navigation Bar'
os.mkdir('/content/'+date+'/'+folder)

products_list = ['PRODUCTS','TECHNOLOGY','Stocks Trading','Derivatives Trading','Commodity Trading','Currencies Trading','Mutual Funds','Loans','Wealth','US Stocks','Demat Account','ETF','5paisa Trading App','5paisa Invest App','5paisa School App','Trade Station V2','Trade Station Web','Developer APIs','Trading Partners']

for product in products_list:
  print(product)
  products_test(product)

  
print("----------------Finished testing Products NavBar----------------")

#@title Stocks NavBar
def stocks_test(name):
  driver.get("http://www.5paisa.com/")
  link_text = driver.find_element(By.XPATH,'/html/body/div/div/header/div[2]/div/div[5]/ul/li[2]/a')
  a.move_to_element(link_text).perform()
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name))).click()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'Stocks Navigation Bar'
os.mkdir('/content/'+date+'/'+folder)

stocks_list = ['SHARE MARKET TODAY','INDIAN INDICES','TOP COMPANIES','Stocks to Buy Today','Penny Stocks','Top Gainers','Top Losers','Global Indices','52 Week High','52 Week Low','Large Cap Stocks','Mid Cap Stocks','Small Cap Stocks','NSE','Nifty 50','Nifty 100','Nifty Next 50','Nifty Bank','BSE','S&P BSE 100','S&P BSE Midcap','S&P BSE Smallcap','Sensex Today','Tata Motors','ITC','Tata Steel','IRCTC','Yes Bank','TCS','SBI','Infosys','Adani Power','Reliance','Tata Power','Trident']

for stock in stocks_list:
  stocks_test(stock)
print("----------------Finished testing Stocks NavBar----------------")

#@title Mutual Funds NavBar
a = ActionChains(driver)
def mf_test(name):
  driver.get("http://www.5paisa.com/")
  link_text = driver.find_element(By.XPATH,'/html/body/div/div/header/div[2]/div/div[5]/ul/li[3]/a')
  a.move_to_element(link_text).perform()
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name))).click()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'Mutual Funds Navigation Bar'
os.mkdir('/content/'+date+'/'+folder)

mf_list = ['MUTUAL FUNDS','TOP AMCS','Large Cap Funds','Mid Cap Funds','Small Cap Funds','ELSS Funds','NFO','Aggressive Allocation','Conservative Allocation','Equity Savings','Multi Asset Allocation','Liquid Funds','Corporate Bond Funds','Low Duration Funds','Banking & PSU Funds','Short Duration Funds','SBI Mutual Fund','UTI Mutual Fund','Aditya Birla Mutual Fund','AXIS Mutual Fund','ICICI Prudential Mutual Fund','Tata Mutual Fund','HDFC Mutual Fund','Nippon india Mutual Fund','DSP Mutual Fund']
for mf in mf_list:
  mf_test(mf)
print("----------------Finished testing Mutual Funds NavBar----------------")

#@title IPO NavBar
a = ActionChains(driver)
def ipo_test(name):
  driver.get("http://www.5paisa.com/")
  link_text = driver.find_element(By.XPATH,'/html/body/div/div/header/div[2]/div/div[5]/ul/li[4]/a')
  a.move_to_element(link_text).perform()
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name))).click()
  driver.implicitly_wait(5)
  status_code = ipo_status_code(driver)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'IPO Navigation Bar'
os.mkdir('/content/'+date+'/'+folder)

ipo_list = ['IPO','Upcoming IPO','Closed IPO','Recently Listed IPO','IPO Allotment Status','Upcoming IPOs in 2022']

for ipo in ipo_list:
  ipo_test(ipo)
print("----------------Finished testing IPO NavBar----------------")

#@title Resources NavBar
def resource_test(name):
  driver.get("http://www.5paisa.com/")
  link_text = driver.find_element(By.XPATH,'/html/body/div/div/header/div[2]/div/div[5]/ul/li[5]/a')
  a.move_to_element(link_text).perform()
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name))).click()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'Resources Navigation Bar'
os.mkdir('/content/'+date+'/'+folder)

resource_list = ['FinSchool','Blog','News','Market Guide','Calculators','Gold Rate Today']

for resource in resource_list:
  resource_test(resource)
print("----------------Finished testing Resources NavBar----------------")

#@title Share Market Footer
a = ActionChains(driver)
def share_market_test(name):
  driver.get("http://www.5paisa.com/")
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH,'//*[@id="block-customfootermenu"]/section/div[1]/div[1]/div/div[1]/i'))).click()
  #driver.find_element(By.XPATH,'//*[@id="block-customfootermenu"]/section/div[1]/div[1]/div/div[1]/i').click()
  link_text = WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name)))
  a.move_to_element(link_text).perform()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'Share Market Footer'
os.mkdir('/content/'+date+'/'+folder)

share_market_list = ['Share Market Today','Penny Stocks','Hot Stocks','Top Gainers','Top Losers','52 Week High','52 Week Low','Large Cap Stocks','Mid Cap Stocks','Small Cap Stocks','IPO','Upcoming IPO','Upcoming IPOs in June 2022','Upcoming IPOs in 2022','Current IPO','Closed IPO','Recently Listed IPO','NSE','BSE','Nifty 50','Sensex Today','Nifty 100','Nifty Next 50','S&P BSE 100','S&P BSE Midcap','S&P BSE Smallcap','Nifty Midcap 100','Nifty Bank','Tata Motors Share Price','IRCTC Share Price','SBI Share Price','Tata Power Share Price','ITC Share Price','Yes Bank Share Price','Infosys Share Price','Reliance Share Price','Tata Steel Share Price','TCS Share Price','Idea Share Price','Power','IT','Coal','FMCG','Automobile','Bank','Chemical','Metal','Cement','Defence','Share Market Holidays','NSE/BSE Holidays 2022','MCX Holidays 2022','Share Market Timing','Gold Rate Today']

for share_market in share_market_list:
  share_market_test(share_market)
print("----------------Finished testing Share Market Footer----------------")

#@title Stock Market Guide Footer
a = ActionChains(driver)
def stock_market_guide_test(name):
  driver.get("https://www.5paisa.com/")
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH,'//*[@id="block-customfootermenu"]/section/div[1]/div[2]/div/div[1]/i'))).click()
  
  link_text = WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name)))
  a.move_to_element(link_text).perform()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'Stock Market Guide Footer'
os.mkdir('/content/'+date+'/'+folder)

stock_market_guide_list = ['Demat Account','What is a Demat Account?','How To Open a Demat Account?','Demat Account Charges','Benefits of a Demat Account','Documents Required for Demat Account','Stock/Share Market','How to Invest in Share Market?','What is share market?','What is share?','What are Penny Stocks?','How to buy shares?','Commodities','What is Commodity Trading?','Tips for Commodity Trading','How Can You Trade Commodity Online?','How Commodity Market Works in India?','Types of Commodity Market','Derivatives','What is Futures Trading?','What is Options Trading?','Difference Between Options and Futures','Derivatives Trading Strategies','What is derivative trading?','What are Derivatives Trading Strategies?','IPO','How to Apply for an IPO ?','What is the eligibility to apply for an IPO?','Why Should You Invest in an IPO?','IPO (Initial Public Offering): All You Need to Know About IPO','What is the Process of IPO?','Online Trading','Online Trading: All You Need To Know About','How To Start Online Trading In India','Online Trading for Beginners','Online Stock Trading Tips','Advantages Of Online Trading']

for stock_market_guide in stock_market_guide_list:
  stock_market_guide_test(stock_market_guide)
print("----------------Finished testing Stock Market Guide Footer----------------")

#@title Mutual Funds Footer
a = ActionChains(driver)
def mutual_funds_footer_test(name):
  driver.get("https://www.5paisa.com/")
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH,'//*[@id="block-customfootermenu"]/section/div[1]/div[3]/div/div[1]/i'))).click()
  
  link_text = WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name)))
  a.move_to_element(link_text).perform()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'Mutual Funds Footer'
os.mkdir('/content/'+date+'/'+folder)

mutual_funds_footer_list = ['Mutual Fund AMCs',
'SBI Mutual Fund',
'Axis Mutual Fund',
'HDFC Mutual Fund',
'UTI Mutual Fund',
'ICICI Prudential Mutual Fund',
'Nippon India Mutual Fund',
'Aditya Birla Mutual Fund',
'Tata Mutual Fund',
'DSP Mutual Fund',
'Kotak Mutual Fund',
'IIFL Mutual Fund',
'Canara Robeco Mutual Fund',
'Franklin Templeton Mutual Fund',
'IDFC Mutual Fund',
'L&T Mutual Fund',
'Mirae Asset Mutual Fund',
'Sundaram Mutual Fund',
'Motilal Oswal Mutual Fund',
'Edelweiss Mutual Fund',
'Invesco Mutual Fund',
'Aditya Birla SL Digital India Fund',
'Axis Bluechip Fund',
'BOI AXA Small Cap Fund',
'SBI Small Cap Fund',
'ICICI Prudential Technology Fund',
'Tata Digital India Fund',
'Mirae Asset Large Cap Fund',
'UTI Flexi Cap Fund',
'Axis Midcap Fund',
'Kotak Emerging Equity Fund',
'Axis Small Cap Fund',
'Mirae Asset Hybrid Equity Fund',
'Nippon India Small Cap Fund',
'Parag Parikh Flexi Cap Fund',
'Tata Small Cap Fund',
'Canara Robeco Small Cap Fund',
'Quant Small Cap Fund',
'Kotak Small Cap Fund',
'Edelweiss Small Cap Fund',
'Union Flexi Cap Fund',
'Top Mutual Fund Categories',
'Equity',
'Largecap',
'Midcap',
'Smallcap',
'ELSS Tax Saving',
'Multi Cap',
'Hybrid',
'Arbitrage',
'Equity Savings',
'Aggressive',
'Debt',
'Liquid',
'Ultra Short Duration',
'Gilt',
'Long Duration',
'Mutual Fund Guide',
'What are Liquid Funds?',
'What are Mid-Cap Funds?',
'What is AMC?',
'What is Debt Fund?',
'What is ELSS Funds?',
'What is Gilt Fund?',
'What is Hybrid Fund?',
'What is IDCW?',
'What is Index Fund?',
'What are Large-Cap Funds?',
'What is PPF?',
'What is Small-Cap Funds?']

for mutual_funds_footer in mutual_funds_footer_list:
  mutual_funds_footer_test(mutual_funds_footer)
print("----------------Finished testing Mutual Funds Footer----------------")

#@title More Footer
a = ActionChains(driver)
def more_test(name):
  driver.get("https://www.5paisa.com/")
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH,'//*[@id="block-customfootermenu"]/section/div[1]/div[4]/div/div[1]/i'))).click()
  
  link_text = WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name)))
  a.move_to_element(link_text).perform()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'More Footer'
os.mkdir('/content/'+date+'/'+folder)

more_list = ['About Us',
'5paisa in Media',
'Investor Relations',
'Careers',
'Partner Program',
'FinSchool',
'Blog',
'News',
'All-in-one Demat Account',
'YoungVestor Account',
'PlusOne Account',
'Add-on Packs',
'Technology',
'5paisa Trading App',
'5paisa Invest App',
'5paisa School App',
'Trade Station V2',
'Trade Station Web',
'Developer APIs',
'Algo Trading',
'Products',
'Stock Trading',
'Derivatives Trading',
'Commodity Trading',
'Currency Trading',
'Mutual Funds',
'US Stocks',
'Loans',
'IPOs',
'Demat Account',
'Connected Apps',
'Sensibull',
'Smart Investor',
'Swing Trader',
'Smallcase',
'Pricing',
'Modes of Payment',
'Terms of use',
'Privacy Policy',
'Disclaimer',
'Information Memorandum',
'Client Copy - Rights & Obligations',
'Notice to Shareholders',
'Notice to Creditors',
'Research AnalystDisclaimer',
'AML Policy',
'Risk Policy',
"Do's and Don'ts",
'Regulatory Notifications',
'Investor Charter Complaints',
'Contact Us',
'Support',
'Raise a Ticket',
'Chat with Us',
'FAQs',
'Discussion Forums',
'Download Forms',
'Announcements',
'Advisory - KYC Compliance',
'Investor Charter',
'Stock Broker',
'Depository Participant',
'Research Analyst',
'Investment Adviser']

for more in more_list:
  more_test(more)
print("----------------Finished testing More Footer----------------")

#@title Calculator Footer
a = ActionChains(driver)
def calculator_test(name):
  driver.get("https://www.5paisa.com/")
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH,'//*[@id="block-customfootermenu"]/section/div[1]/div[5]/div/div[1]/i'))).click()
  
  link_text = WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name)))
  a.move_to_element(link_text).perform()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'Calculator Footer'
os.mkdir('/content/'+date+'/'+folder)

calculator_list = ['Brokerage Calculator',
'CAGR Calculator',
'Compound Interest Calculator',
'FD Calculator',
'PPF Calculator',
'RD Calculator (Recurring Deposit)',
'Span Margin Calculator',
'Lumpsum Calculator',
'SIP Calculator',
'EMI Calculator',
'BMI Calculator',
'Currency Calculator',
'Gratuity Calculator',
'Pension Calculator']

for calculator in calculator_list:
  calculator_test(calculator)
print("----------------Finished testing More Footer----------------")

#@title Nifty-50 Footer
a = ActionChains(driver)
def nifty_50_test(name):
  driver.get("https://www.5paisa.com/")
  WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.XPATH,'//*[@id="block-customfootermenu"]/section/div[1]/div[6]/div/div[1]/i'))).click()
  
  link_text = WebDriverWait(driver, 5).until(EC.element_to_be_clickable((By.PARTIAL_LINK_TEXT,name)))
  a.move_to_element(link_text).perform()
  driver.implicitly_wait(1)
  status_code = get_status_code(driver.current_url)
  if status_code != 200:
    print("ERROR:", status_code,'in',name)
    save_screenshot(driver, name, folder)
  else:
    save_screenshot(driver, name, folder)

folder = 'Nifty-50 Footer'
os.mkdir('/content/'+date+'/'+folder)

nifty_50_list = ['Asian Paints',
'Axis Bank',
'Bajaj Finserv',
'HCL Technologies',
'HDFC Ltd.',
'ICICI Bank',
'Kotak Mahindra Bank',
'Larsen & Toubro',
'Maruti Suzuki India',
'Nestle India',
'Adani Ports',
'Mahindra & Mahindra',
'NTPC',
'ONGC',
'Power Grid Corporation',
'Sun Pharmaceutical',
'Tata Motors',
'Titan Company',
'Ultratech Cement',
'Wipro Ltd.',
'Bajaj Auto',
'Britannia Industries',
'COAL India',
'Divis Laboratories',
'Grasim Industries',
'HDFC Life',
'JSW Steel',
'SBI Life Insurance',
'Tata Steel',
'Tech Mahindra',
'Apollo Hospitals',
'BPCL',
'Cipla',
"Dr. Reddy's Lab",
'Hero Motocorp',
'Hindalco Industries',
'Indusind Bank',
'Shree Cements',
'Tata Consumer',
'UPL',
'Bajaj Finance',
'Bharti Airtel',
'Eicher Motors',
'HDFC Bank',
'Hindustan Unilever',
'ITC',
'Infosys',
'Reliance Industries']

for nifty_50 in nifty_50_list:
  nifty_50_test(nifty_50)
print("----------------Finished testing Nifty-50 Footer----------------")